JMP  0      14           (1) Jump over the predefined functions.
LDV  0      0            (2) Load argument.                
OPR  0      25           (3) Convert an integer to a real. 
OPR  0      1            (4) Function value return.        
LDV  0      0            (5) Load argument.                
OPR  0      26           (6) Convert an real to an integer.
OPR  0      1            (7) Function value return.        
LDV  0      0            (8) Load argument.                
OPR  0      27           (9) Convert an integer to a string.
OPR  0      1            (10) Function value return.        
LDV  0      0            (11) Load argument.                
OPR  0      28           (12) Convert an real to a string.  
OPR  0      1            (13) Function value return.        
INC  0      3            (14) Reserve space for local variables
JMP  0      40           (15) Jump to start of statements or block.
INC  0      3            (16) Reserve space for declared variables and constants.
INC  0      2            (17) Reserve space for local variables
JMP  0      19           (18) Jump to start of statements or block.
LDV  0      0            (19) Load value parameter.         
LDV  0      0            (20) Load value parameter.         
OPR  0      3            (21) Add arithmetic expressions together.
LDV  0      1            (22) Load address of variable to store the result.
STI  0      0            (23) Store expression.             
OPR  0      0            (24) Procedure return.             
INC  0      3            (25) Reserve space for local variables
JMP  0      28           (26) Jump to start of statements or block.
INC  0      1            (27) Reserve space for declared variables and constants.
MST  1      0            (28) Mark stack.                   
LDV  0      0            (29) Load actual value parameter   
LDA  0      2            (30) Load actual reference parameter
CAL  2      17           (31) Call the procedure.           
MST  1      0            (32) Mark stack.                   
LDV  0      2            (33) Load actual value parameter   
LDA  0      2            (34) Load actual reference parameter
CAL  2      17           (35) Call the procedure.           
LDV  0      2            (36) Load variable or constant.    
LDV  0      1            (37) Load address of variable to store the result.
STI  0      0            (38) Store expression.             
OPR  0      0            (39) Procedure return.             
LCS  0      'Enter a number: '       (40) Load string value.            
OPR  0      20           (41) Write string value.           
RDI  0      0            (42) Read integer value.           
MST  0      0            (43) Mark stack.                   
LDV  0      0            (44) Load actual value parameter   
LDA  0      1            (45) Load actual reference parameter
CAL  2      17           (46) Call the procedure.           
MST  0      0            (47) Mark stack.                   
LDV  0      0            (48) Load actual value parameter   
LDA  0      2            (49) Load actual reference parameter
CAL  2      25           (50) Call the procedure.           
OPR  0      21           (51) Terminate output to the current line.
MST  1      0            (52) Mark stack.                   
LDV  0      0            (53) Load variable or constant.    
CAL  1      8            (54) Function call.                
OPR  0      20           (55) Write string value.           
LCS  0      '  '         (56) Load string value.            
OPR  0      20           (57) Write string value.           
MST  1      0            (58) Mark stack.                   
LDV  0      1            (59) Load variable or constant.    
CAL  1      8            (60) Function call.                
OPR  0      20           (61) Write string value.           
LCS  0      '  '         (62) Load string value.            
OPR  0      20           (63) Write string value.           
MST  1      0            (64) Mark stack.                   
LDV  0      2            (65) Load variable or constant.    
CAL  1      8            (66) Function call.                
OPR  0      20           (67) Write string value.           
OPR  0      21           (68) Terminate output to the current line.
JMP  0      0            (69) Halt program.                 
