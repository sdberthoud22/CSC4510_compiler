INC	0	1	(1)	alloc var: 0 - number
JMP	0	12	(2)	jump to main
INC	0	1	(3)	alloc var: 1 - n2
LDV	0	0	(4)	load value parameter n onto tos
LDV	0	0	(5)	load value parameter n onto tos
OPR	0	3	(6)	n + n
STO	0	1	(7)	n2 := n + n
LDV	0	1	(8)	load n2 onto tos
OPR	0	20	(9)	write n2
OPR	0	22	(10)	newline
OPR	0	0	(11)	return
RDI	0	0	(12)	read number
MST	0	0	(13)	mark the stack - level diff to decl of proc double is 0
LDV	0	0	(14)	load value of number onto tos as value parameter for double
CAL	1	3	(15)	call double: 1 parameter; starts at instruction 3
JMP	0	0	(16)	halt
